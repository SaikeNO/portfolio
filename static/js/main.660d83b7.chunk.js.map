{"version":3,"sources":["styles/colors.js","layouts/Header/style.js","layouts/Header/Header.js","layouts/AsideNavi/style.js","layouts/AsideNavi/AsideNaviItem.js","layouts/AsideNavi/AsideNavi.js","layouts/BurgerNavi/style.js","layouts/BurgerNavi/BurgerNaviItem.js","layouts/BurgerNavi/BurgerNavi.js","App.js","reportWebVitals.js","index.js"],"names":["colors","StyledHeader","styled","header","StyledButton","button","props","isOpened","LinkElement","NavLink","StyledBurger","span","Header","handleToggleClick","exact","to","onClick","StyledAside","aside","StyledLink","StyledPageCounter","div","AsideNaviItem","path","name","dataNav","AsideNavi","location","useLocation","useState","currentPage","setCurrentPage","useEffect","pathname","menu","map","item","initial","y","opacity","animate","exit","transition","duration","StyledNav","motion","nav","StyledList","ul","BurgerNaviItem","index","li","delay","whileHover","color","BurgerNavigation","x","App","setIsOpened","basename","process","prevIsOpened","BurgerNavi","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.660d83b7.chunk.js","sourcesContent":["export const colors = {\r\n  black: \"#1F1F1F\",\r\n  gray: \"#646464\",\r\n  orange: \"#FFD100\",\r\n  white: \"#F1F1F1\",\r\n};\r\n","import styled from \"styled-components\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { colors } from \"../../styles/colors\";\r\n\r\nexport const StyledHeader = styled.header`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  height: 100px;\r\n  padding: 0 50px;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  z-index: 999;\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n  position: relative;\r\n  width: 40px;\r\n  ${(props) =>\r\n    props.isOpened\r\n      ? \"& span:first-of-type {width: 90%;} span:nth-of-type(2) {width: 60%;} span:nth-of-type(3) {width: 30%}\"\r\n      : \"\"};\r\n  background-color: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  z-index: 999;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-end;\r\n  &:hover span:first-of-type {\r\n    width: 90%;\r\n  }\r\n  &:hover span:nth-of-type(2) {\r\n    width: 60%;\r\n  }\r\n  &:hover span:nth-of-type(3) {\r\n    width: 30%;\r\n  }\r\n  transition: 0.4s;\r\n`;\r\n\r\nexport const LinkElement = styled(NavLink)`\r\n  font-size: 0.9em;\r\n  color: ${colors.white};\r\n`;\r\n\r\nexport const StyledBurger = styled.span`\r\n  display: block;\r\n  height: 3px;\r\n  width: 100%;\r\n  margin-bottom: 7px;\r\n  background-color: ${colors.orange};\r\n  transition: 0.4s;\r\n  &:first-of-type {\r\n    margin-top: 7px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { StyledHeader, StyledButton, LinkElement, StyledBurger } from \"./style\";\r\n\r\nconst Header = ({ handleToggleClick, isOpened }) => {\r\n  return (\r\n    <StyledHeader>\r\n      <nav>\r\n        <LinkElement exact to={\"/\"}>\r\n          lengiewicz\r\n        </LinkElement>\r\n      </nav>\r\n      <StyledButton onClick={handleToggleClick} isOpened={isOpened}>\r\n        <StyledBurger />\r\n        <StyledBurger />\r\n        <StyledBurger />\r\n      </StyledButton>\r\n    </StyledHeader>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { NavLink } from \"react-router-dom\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { colors } from \"../../styles/colors\";\r\n\r\nexport const StyledAside = styled.aside`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding: 50px;\r\n  z-index: 0;\r\n`;\r\n\r\nexport const StyledLink = styled(NavLink)`\r\n  display: block;\r\n  padding: 0.3em;\r\n  font-size: 1.3em;\r\n  color: ${colors.white};\r\n`;\r\n\r\nexport const StyledPageCounter = styled.div`\r\n  position: relative;\r\n  font-size: 1.1em;\r\n  height: 50px;\r\n  font-weight: bold;\r\n  color: ${colors.orange};\r\n  & span:first-of-type {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n  }\r\n  & span:nth-of-type(2) {\r\n    position: absolute;\r\n    top: 20%;\r\n    left: 15%;\r\n  }\r\n  & span:nth-of-type(3) {\r\n    position: absolute;\r\n    top: 40%;\r\n    left: 30%;\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { StyledLink } from \"./style\";\r\n\r\nconst AsideNaviItem = ({ path, exact, name }) => {\r\n  return (\r\n    <li>\r\n      <StyledLink to={path} exact={exact}>\r\n        {\" \"}\r\n        {name}\r\n      </StyledLink>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default AsideNaviItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nimport AsideNaviItem from \"./AsideNaviItem\";\r\n\r\nimport { StyledAside, StyledPageCounter } from \"./style\";\r\n\r\nconst dataNav = [\r\n  { name: \"-- home\", path: \"/\", exact: true },\r\n  { name: \"-- about\", path: \"/about\" },\r\n  { name: \"-- works\", path: \"/works\" },\r\n  { name: \"-- contact\", path: \"/contact\" },\r\n];\r\n\r\nconst AsideNavi = () => {\r\n  const location = useLocation();\r\n  const [currentPage, setCurrentPage] = useState();\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(() => {\r\n      if (location.pathname === \"/\") return 1;\r\n      else if (location.pathname === \"/about\") return 2;\r\n      else if (location.pathname === \"/works\") return 3;\r\n      else if (location.pathname === \"/contact\") return 4;\r\n      else return -1;\r\n    });\r\n  }, [location]);\r\n\r\n  const menu = dataNav.map((item) => (\r\n    <AsideNaviItem\r\n      key={item.name}\r\n      path={item.path}\r\n      exact={item.exact}\r\n      name={item.name}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <StyledAside>\r\n      <StyledPageCounter>\r\n        <motion.span\r\n          initial={{ y: 20, opacity: 0 }}\r\n          animate={{ y: 0, opacity: 1 }}\r\n          exit={{ y: -20, opacity: 0 }}\r\n          transition={{ duration: 0.5 }}\r\n        >\r\n          {currentPage}\r\n        </motion.span>\r\n        <span>/</span>\r\n        <span>4</span>\r\n      </StyledPageCounter>\r\n      <nav>\r\n        <ul>{menu}</ul>\r\n      </nav>\r\n    </StyledAside>\r\n  );\r\n};\r\n\r\nexport default AsideNavi;\r\n","import { NavLink } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { motion } from \"framer-motion\";\r\nimport { colors } from \"../../styles/colors\";\r\n\r\nexport const StyledNav = styled(motion.nav)`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100%;\r\n  width: 100%;\r\n  background-color: ${colors.white};\r\n`;\r\n\r\nexport const StyledList = styled.ul`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  font-size: 60px;\r\n  text-transform: uppercase;\r\n`;\r\nexport const StyledLink = styled(motion(NavLink))`\r\n  color: ${colors.black};\r\n  font-weight: bold;\r\n`;\r\n","import { motion } from \"framer-motion\";\r\nimport { StyledLink } from \"./style\";\r\nimport { colors } from \"../../styles/colors\";\r\n\r\nconst BurgerNaviItem = ({ name, path, exact, index }) => {\r\n  return (\r\n    <motion.li\r\n      initial={{ y: 50, opacity: 0 }}\r\n      animate={{ y: 0, opacity: 1 }}\r\n      exit={{\r\n        transition: { duration: 0.5, delay: (index - 1.5) * 0.2 },\r\n        y: -50,\r\n        opacity: 0,\r\n      }}\r\n      transition={{ duration: 0.5, delay: index * 0.2 }}\r\n    >\r\n      <StyledLink\r\n        whileHover={{\r\n          color: colors.orange,\r\n        }}\r\n        transition={{\r\n          duration: 0.2,\r\n        }}\r\n        to={path}\r\n        exact={exact}\r\n      >\r\n        {name}\r\n      </StyledLink>\r\n    </motion.li>\r\n  );\r\n};\r\nexport default BurgerNaviItem;\r\n","import React from \"react\";\r\nimport MenuItem from \"./BurgerNaviItem\";\r\n\r\nimport { StyledNav, StyledList } from \"./style\";\r\n\r\nconst dataNav = [\r\n  { name: \"home\", path: \"/\", exact: true },\r\n  { name: \"about\", path: \"/about\" },\r\n  { name: \"works\", path: \"/works\" },\r\n  { name: \"contact\", path: \"/contact\" },\r\n];\r\n\r\nconst BurgerNavigation = () => {\r\n  const menu = dataNav.map((item, index) => (\r\n    <MenuItem\r\n      key={index}\r\n      name={item.name}\r\n      path={item.path}\r\n      exact={item.exact}\r\n      index={index + 1}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <StyledNav\r\n      key=\"burger nav\"\r\n      initial={{ x: \"-100%\" }}\r\n      animate={{ x: 0 }}\r\n      exit={{ x: \"-100%\", transition: { delay: 0.8, duration: 0.5 } }}\r\n      transition={{ duration: 0.8 }}\r\n    >\r\n      <StyledList>{menu}</StyledList>\r\n    </StyledNav>\r\n  );\r\n};\r\n\r\nexport default BurgerNavigation;\r\n","import React, { useState } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport { AnimatePresence } from \"framer-motion\";\n\nimport Header from \"./layouts/Header/Header\";\nimport Page from \"./layouts/Page/Page\";\nimport AsideNavi from \"./layouts/AsideNavi/AsideNavi\";\nimport BurgerNavi from \"./layouts/BurgerNavi/BurgerNavi\";\n\nimport \"./styles/App.css\";\n\nfunction App() {\n  const [isOpened, setIsOpened] = useState(false);\n\n  const handleToggleClick = () => setIsOpened((prevIsOpened) => !prevIsOpened);\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Header isOpened={isOpened} handleToggleClick={handleToggleClick} />\n      <header></header>\n      {/* <Page /> */}\n      <AsideNavi />\n      <AnimatePresence>{isOpened && <BurgerNavi />}</AnimatePresence>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}